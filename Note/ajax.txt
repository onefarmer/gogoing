
知识点：

● HTTP协议

● AJAX

● XMLHttpRequest对象

=============================================================================

HTTP通讯协议

简介：

协议是指计算机通信网络中两台计算机之间进行通信所必须共同遵守的规定或规则。

HTTP(超文本传输协议)是一种通信协议，它允许将超文本标记语言(HTML)文档从Web服务器传送到客户端的浏览器。

特点：

HTTP协议永远都是客户端发起请求，服务器回送响应。这样就限制了使用HTTP协议，无法实现在客户端没有发起请求的时候，服务器将消息推送给客户端。


工作流程：

一次HTTP操作称为一个事务，其工作过程可分为四步：

1）首先客户机与服务器需要建立连接。

2）建立连接后，客户机发送一个请求给服务器，请求方式的格式为：统一资源标识符（URL）、协议版本号，客户机信息和可能的内容。

3）服务器接到请求后，给予相应的响应信息，其格式为一个状态行，包括信息的协议版本号、一个成功或错误的代码（status Code状态码），后边服务器信息、实体信息和可能的内容。

4）客户端接收完服务器所返回的信息后，与服务器断开连接。

如果在以上过程中的某一步出现错误，那么产生错误的信息将返回到客户端。

对于用户来说，这些过程是由HTTP自己完成的，用户只要用鼠标点击，等待信息显示就可以了。



HTTP协议常用状态码（Status Code）及其含义:

1**：信息，服务器收到请求，需要请求者继续执行操作

100	继续。客户端应继续其请求
101	切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议


2**：成功，操作被成功接收并处理

200	请求成功。一般用于GET与POST请求
201	已创建。成功请求并创建了新的资源
202	已接受。已经接受请求，但未处理完成
203	非授权信息。请求成功。
204	无内容。服务器成功处理，但未返回内容。
205	重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。
206	部分内容。服务器成功处理了部分GET请求


3**：重定向，需要进一步的操作以完成请求

300	请求的资源可在多处得到
301	删除请求数据
302	在其他地址发现了请求数据
303	建议客户访问其他URL或访问方式
304	客户端已经执行了GET，但文件未变化
305	请求的资源必须从服务器指定的地址得到
306	前一版本HTTP中使用的代码，现行版本中不再使用
307	申明请求的资源临时性删除


4**：客户端错误，请求包含语法错误或无法完成请求

400	错误请求，如语法错误
401	请求授权失败
402	保留有效ChargeTo头响应
403	请求不允许
404	没有发现文件、查询或URl
405	用户在Request-Line字段定义的方法不允许
406	根据用户发送的Accept拖，请求资源不可访问
407	类似401，用户必须首先在代理服务器上得到授权
408	客户端没有在用户指定的时间内完成请求
409	对当前资源状态，请求不能完成
410	服务器上不再有此资源且无进一步的参考地址
411	服务器拒绝用户定义的Content-Length属性请求
412	一个或多个请求头字段在当前请求中错误
413	请求的资源大于服务器允许的大小
414	请求的资源URL长于服务器允许的长度
415	请求资源不支持请求项目格式
416	请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段
417	服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求


5**：服务器错误，服务器在处理请求的过程中发生了错误

500	服务器产生内部错误
501	服务器不支持请求的函数
502	服务器暂时不可用，有时是为了防止发生系统过载
503	服务器过载或暂停维修
504	关口过载，服务器使用另一个关口或服务来响应用户，等待时间设定值较长
505	服务器不支持或拒绝支请求头中指定的HTTP版本

-------------------------------------------------------------------------------------------------

AJAX （ Asynchronous JavaScript and XML）

 synchronous：同步

Asynchronous：异步的

AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。

AJAX 通过异步（Asynchronous）方式与服务器进行少量数据交换，使网页实现异步更新。这意味着可以在不重载整个页面的情况下，对网页的某些部分进行更新。

AJAX通过操作XMLHttpRequest对象，与服务器异步交互数据，要完整实现一个AJAX异步调用和局部刷新,通常需要以下几个步骤:

(1)创建XMLHttpRequest对象

(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息.

(3)发送数据

(4)接收数据

AJAX 状态值(readyState)：

操作AJax的时，最关键的一步是对XMLHttpRequest对象建立监听------即使用“onreadystatechange”方法。

监听的时候，要对XMLHttpRequest对象的请求状态进行判断，通常是判断readyState的值为4 且status Code状态码的值为200或者304时执行我们需要的操作。

每当 readyState 改变时，就会触发 onreadystatechange 事件。


readyState属性表示Ajax请求的当前状态。它的值用数字代表：

0 请求未初始化			还没有调用 open 方法

1 服务器连接已建立		open 方法已被调用，但 send 方法还没有被调用

2 请求已接收			send 已被调用。请求已经开始

3 请求处理中			服务器正在发送响应

4 请求已完成，且响应已就绪	响应发送完毕


----------------------------------------------------------------------------------------

XMLHttpRequest 对象

XMLHttpRequest 对象用于在后台与服务器交换数据，所有现代的浏览器都支持该对象，它能够实现：

在后台（异步方式）向服务器发送数据

在页面已加载后从服务器 请求/接收 数据，在不重新加载页面的情况下更新网页





